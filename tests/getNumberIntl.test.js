const fc = require("fast-check");

// Function that turns a string into a number using JavaScript's built-in Number()
const getNumber = inputString => {
  const numberFromInputString = Number(inputString);
  return numberFromInputString;
};

// Failing example-based test
test("turns an input string into a number", () => {
  // Uncomment the following line to see the failing test case:
  //   expect(getNumber("19,95")).toBe(19.95);
});

// Solves for the failing test case with property-based testing
test("turns any valid input string into a number, regardless of locale", () => {
  fc.assert(
    fc.property(
      fc.float(),
      // fc.option() returns either null or a value coming from the entered arbitrary
      fc.option(
        // fc.constantFrom() indicates that these values are all equiprobable
        fc.constantFrom("de-DE", "fr-FR")
      ),
      (testFloat, locale) => {
        // Limits the number digits after the decimal in the generated float to 2
        const fixedFloat = parseFloat(testFloat.toFixed(2));

        // If there's a value for locale, create and return formatted string
        // If null, return a string representing the floating-point number
        const floatString = locale
          ? new Intl.NumberFormat(locale).format(fixedFloat)
          : fixedFloat.toString();

        expect(getNumber(floatString)).toBe(fixedFloat);
      }
    )
  );
});

console.log(
  // Logs an array that contains the potential values generated by this arbitrary
  fc.sample(fc.option(fc.constantFrom("de-DE", "fr-FR")), 10)
);
